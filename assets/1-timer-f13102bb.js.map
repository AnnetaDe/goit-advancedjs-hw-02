{"version":3,"file":"1-timer-f13102bb.js","sources":["../../src/js/1-timer.js"],"sourcesContent":["export * from \"./1-timer.js\";\n\n\n// Описаний в документації https://flatpickr.js.org/\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\n\n\n\nconst startBtn = document.querySelector('button[data-start]');\nconst daysEl = document.querySelector('span[data-days]');\nconst hoursEl = document.querySelector('span[data-hours]');\nconst minutesEl = document.querySelector('span[data-minutes]');\nconst secondsEl = document.querySelector('span[data-seconds]');\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    },\n  };\nlet userSelectedDate = null;\nlet currentDate = null;\n\noptions.onClose = function(selectedDates, dateStr, instance) {\n    userSelectedDate = selectedDates[0];\n    currentDate = new Date();\n    const p= new Promise ((resolve, reject) => {\n        if (userSelectedDate < currentDate) {\n            reject('error');\n            iziToast.error({\n                title: \"ooops!\",\n                message: \"Thats a timer, not a time machine!\",\n            });\n        }\n        resolve(\"ok thats more optimistic\", userSelectedDate);\n        \n    });\n    \n    p.then((result) => {\n        startBtn.disabled = false;\n        console.log( result);\n    })\n    .catch(() => {\n        startBtn.disabled = true;\n        console.log(\"Error\");\n    });\n};\noptions.onOpen = function(selectedDates, dateStr, instance) {\n    iziToast.info({\n        title: \"Hey!\",\n        message: \"Please, select a future date\",\n    });\n}\n\nconst fp= flatpickr(\"#datetime-picker\", options);\n\nfunction startTimer() {\n    const targetDate = new Date(fp.selectedDates[0]);\n    const currentDate = new Date();\n    if (targetDate > currentDate) {\n        const deltaTime = targetDate - currentDate;\n        const { days, hours, minutes,seconds } = convertMs(deltaTime);\n        daysEl.textContent = days;\n        hoursEl.textContent = hours;\n        minutesEl.textContent = minutes;\n        secondsEl.textContent = seconds;\n      const timerId = setInterval(() => {\n        const currentDate = new Date();\n        const deltaTime = targetDate - currentDate;\n        const { days, hours, minutes,seconds } = convertMs(deltaTime);\n        \n        daysEl.textContent = addZero(days);\n        hoursEl.textContent = addZero(hours);\n        minutesEl.textContent = addZero(minutes);\n        secondsEl.textContent = addZero(seconds);\n        \n        if (deltaTime < 1000) {\n            clearInterval(timerId);\n            startBtn.disabled = false;\n        }\n    }, 1000);\n    startBtn.disabled = true;\n    };\n\n  }\n  \n  \nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }\nfunction addZero(value) {\n    return String(value).padStart(2, \"0\");\n  }\n  \nstartBtn.addEventListener(\"click\", startTimer);\nstartBtn.classList.add(\"button\");\n\n\n\n\n"],"names":["startBtn","daysEl","hoursEl","minutesEl","secondsEl","options","selectedDates","userSelectedDate","currentDate","dateStr","instance","resolve","reject","iziToast","result","fp","flatpickr","startTimer","targetDate","deltaTime","days","hours","minutes","seconds","convertMs","timerId","addZero","ms","value"],"mappings":"gDAgBA,MAAMA,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAS,SAAS,cAAc,iBAAiB,EACjDC,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAY,SAAS,cAAc,oBAAoB,EACvDC,EAAY,SAAS,cAAc,oBAAoB,EAEvDC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACvB,QAAQ,IAAIA,EAAc,CAAC,CAAC,CAC3B,CACL,EACA,IAAIC,EAAmB,KACnBC,EAAc,KAElBH,EAAQ,QAAU,SAASC,EAAeG,EAASC,EAAU,CACzDH,EAAmBD,EAAc,CAAC,EAClCE,EAAc,IAAI,KACT,IAAI,QAAS,CAACG,EAASC,IAAW,CACnCL,EAAmBC,IACnBI,EAAO,OAAO,EACdC,EAAS,MAAM,CACX,MAAO,SACP,QAAS,oCACzB,CAAa,GAELF,EAAQ,2BAA4BJ,CAAgB,CAE5D,CAAK,EAEC,KAAMO,GAAW,CACfd,EAAS,SAAW,GACpB,QAAQ,IAAKc,CAAM,CAC3B,CAAK,EACA,MAAM,IAAM,CACTd,EAAS,SAAW,GACpB,QAAQ,IAAI,OAAO,CAC3B,CAAK,CACL,EACAK,EAAQ,OAAS,SAASC,EAAeG,EAASC,EAAU,CACxDG,EAAS,KAAK,CACV,MAAO,OACP,QAAS,8BACjB,CAAK,CACL,EAEA,MAAME,EAAIC,EAAU,mBAAoBX,CAAO,EAE/C,SAASY,GAAa,CAClB,MAAMC,EAAa,IAAI,KAAKH,EAAG,cAAc,CAAC,CAAC,EACzCP,EAAc,IAAI,KACxB,GAAIU,EAAaV,EAAa,CAC1B,MAAMW,EAAYD,EAAaV,EACzB,CAAE,KAAAY,EAAM,MAAAC,EAAO,QAAAC,EAAQ,QAAAC,GAAYC,EAAUL,CAAS,EAC5DlB,EAAO,YAAcmB,EACrBlB,EAAQ,YAAcmB,EACtBlB,EAAU,YAAcmB,EACxBlB,EAAU,YAAcmB,EAC1B,MAAME,EAAU,YAAY,IAAM,CAEhC,MAAMN,EAAYD,EADE,IAAI,KAElB,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAQ,QAAAC,GAAYC,EAAUL,CAAS,EAE5DlB,EAAO,YAAcyB,EAAQN,CAAI,EACjClB,EAAQ,YAAcwB,EAAQL,CAAK,EACnClB,EAAU,YAAcuB,EAAQJ,CAAO,EACvClB,EAAU,YAAcsB,EAAQH,CAAO,EAEnCJ,EAAY,MACZ,cAAcM,CAAO,EACrBzB,EAAS,SAAW,GAE3B,EAAE,GAAI,EACPA,EAAS,SAAW,EAExB,CACG,CAGH,SAASwB,EAAUG,EAAI,CAOnB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAE1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EAEpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EAEjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CACH,SAASG,EAAQE,EAAO,CACpB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,CAEH5B,EAAS,iBAAiB,QAASiB,CAAU,EAC7CjB,EAAS,UAAU,IAAI,QAAQ"}